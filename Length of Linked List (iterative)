#include <iostream>

class Node
{
public:
	int data;                            //data in a node of linked list
	Node *next;
	Node(int data)				// constructor to create the node
	{
		this->data = data;
		this->next = NULL;		// next pointer initially pointing to null
	}
};

using namespace std;


Node *takeinput()                             // function to take input
{
	int data;
	cin >> data;
	Node *head = NULL, *tail = NULL;		//tail to kep track of the last node so that we don't have to traverse every time to add node
	while (data != -1)				// check if data is entered
	{
		Node *newNode = new Node(data);
		if (head == NULL)			// if head is null, it's the first entry.
		{
			head = newNode;			// initialise head with the newNode
			tail = newNode;			// initialise tail with the newNode
		}
		else
		{
			tail->next = newNode;		//if head!=null, add newnode to tail->next
			tail = newNode;			// move tail to newNode
		}
		cin >> data;
	}
	return head;
}

int length(Node *head)			// function to find the length of linkedlist
{
    int len=0;        				// initialise len=0
    while(head!=NULL){				run the loop until head is NULL
        len++;					//increment len in every iteration
        head=head->next;			// move head to the next element
    }
    return len;					// finally return the length
}	

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		Node *head = takeinput();
		cout << length(head) << endl;
	}
	return 0;
}
